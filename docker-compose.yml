version: '3.9'

name: tripsit-dev

########################### EXTENSION FIELDS
# Common environment values
x-environment: &default-tz-puid-pgid
  TZ: $TZ
  PUID: $PUID
  PGID: $PGID
 
# Keys common to some of the core services that we always to automatically restart on failure
x-common-keys-core: &common-keys-core
  security_opt:
    - no-new-privileges:true
  restart: always

# Keys common to some of the dependent services/apps
x-common-keys-apps: &common-keys-apps
  security_opt:
    - no-new-privileges:true
  restart: unless-stopped

########################### SERVICES
services:
  # Core
  docker-socket-proxy:
    <<: *common-keys-core
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    ports:
    - "127.0.0.1:2375:2375" # Port 2375 should only ever get exposed to the internal network.
    networks:
    - socket-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      <<: *default-tz-puid-pgid
      LOG_LEVEL: info # debug,info,notice,warning,err,crit,alert,emerg
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      # 0 to revoke access.
      # 1 to grant access.
      ## Granted by Default
      EVENTS: 1
      PING: 1
      VERSION: 1
      ## Revoked by Default
      # Security critical
      AUTH: 0
      SECRETS: 0
      POST: 1 # Watchtower
      # Not always needed
      BUILD: 1 # Drone
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1 # Traefik, portainer, etc.
      DISTRIBUTION: 0
      EXEC: 0
      IMAGES: 1 # Portainer
      INFO: 1 # Portainer
      NETWORKS: 1 # Portainer
      NODES: 0
      PLUGINS: 0
      SERVICES: 1 # Portainer
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1 # Portainer
      VOLUMES: 1 # Portainer
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false
  portainer:
    <<: *common-keys-core
    image: portainer/portainer-ce:latest
    container_name: portainer
    command: -H tcp://socket-proxy:2375
    depends_on: 
      - docker-socket-proxy
    # ports:
    #   - 9000:9000
    networks:
      socket-net:
      portainer-net:
    volumes:
      - ${DOCKERDIR}/appdata/portainer/data/:/data
    environment:
      <<: *default-tz-puid-pgid
      DOCKER_HOST: tcp://socket-proxy:2375
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.docker.network=portainer-net
      - traefik.http.services.portainer-svc.loadbalancer.server.port=9000
      - traefik.http.routers.portainer-rtr.rule=Host(`portainer.${DNS_DOMAIN}`)
      - traefik.http.routers.portainer-rtr.service=portainer-svc
      - traefik.http.routers.portainer-rtr.entrypoints=web
      # - traefik.http.routers.portainer-rtr.tls=true
      - traefik.http.routers.portainer-rtr.middlewares=chain-no-auth@file
  traefik:
    <<: *common-keys-core
    image: traefik:latest
    container_name: traefik
    environment:
      - DOCKER_HOST=tcp://socket-proxy:2375
      - DOMAINNAME_CLOUD_SERVER=${DNS_DOMAIN}
      # - CF_API_EMAIL=${CF_EMAIL}
      # - CF_API_KEY=${CF_API_KEY}
    ports:
      - 80:80
      # - 443:443
    volumes:
      - ${DOCKERDIR}/traefik/rules:/data/rules
      - ${DOCKERDIR}/logs/traefik:/var/log/traefik
      - ${LOCAL_MOUNT}/traefik/letsencrypt:/letsencrypt
      - ${DOCKERDIR}/traefik/static:/etc/traefik
      # - /etc/traefik:/etc/traefik
    #   - ${DOCKERDIR}/traefik/dynamic:/data/rules
    #   - ${DOCKERDIR}/traefik/static:/etc/traefik
    networks:
      dozzle-net:
      duplicati-net:
      database_frontend-net:
      database_backend-net:
      drone-net:
      files-net:
      gotify-net:
      gitlab-net:
      it-net:
      kuma-net:
      keycloak-net:
      lounge-vip-net:
      lounge-net:
      mail-net:
      matrix-net:
      monica-net:
      moodle-net:
      netdata-net:
      nginx-net:
      oauth-net:
      organizr-net:
      portainer-net:
      postgres-net:
      privatebin-net:
      speedtest-net:
      socket-net:
      trilium-net:
      tripbot-net:
      traefik-net:
      whoami-net:
    labels:
      # - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.rule=Host(`traefik.${DNS_DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=web
      # - traefik.http.routers.traefik.tls.certresolver=letsencrypt
      # - traefik.http.routers.traefik.tls.domains[0].main=${DNS_DOMAIN}
      # - traefik.http.routers.traefik.tls.domains[0].sans=*.${DNS_DOMAIN}
      # - traefik.http.routers.traefik.tls.domains[1].main=${OTHER_DOMAIN}
      # - traefik.http.routers.traefik.tls.domains[1].sans=*.${OTHER_DOMAIN}
      # - traefik.http.routers.traefik.middlewares=middlewares-traefik-strip@file,chain-no-auth@file
  fail2ban:
    <<: *common-keys-core
    image: crazymax/fail2ban:latest
    container_name: fail2ban
    volumes:
      - ${DOCKERDIR}/appdata/fail2ban/log:/var/log:ro
      - ${DOCKERDIR}/appdata/fail2ban/data:/data
    environment:
      <<: *default-tz-puid-pgid
    network_mode: host
    cap_add:
    - NET_ADMIN
    - NET_RAW
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=false

########################### NETWORKS
networks:
  codimd-net:
    name: codimd-net
  database-net:
    name: database-net
  database_frontend-net:
    name: database_frontend-net
  database_backend-net:
    name: database_backend-net
  dozzle-net:
    name: dozzle-net
  duplicati-net:
    name: duplicati-net
  drone-net:
    name: drone-net
  drone_private-net:
    name: drone_private-net
  files-net:
    name: files-net
  gotify-net:
    name: gotify-net
  gitlab-net:
    name: gitlab-net
  gitlab-net-private:
    name: gitlab-net-private
  it-net:
    name: it-net
  keycloak-net:
    name: keycloak-net
  keycloak_db-net:
    name: keycloak_db-net
  kuma-net:
    name: kuma-net
  lounge-vip-net:
    name: lounge-vip-net
  lounge-net:
    name: lounge-net
  matrix-net:
    name: matrix-net
  mail-net:
    name: mail-net
  monica-net:
    name: monica-net
  moodle-net:
    name: moodle-net
  moodle_db-net:
    name: moodle_db-net
  netdata-net:
    name: netdata-net
  nginx-net:
    name: nginx-net
  nginx-private-net:
    name: nginx-private-net
  oauth-net:
    name: oauth-net
  organizr-net:
    name: organizr-net
  portainer-net:
    name: portainer-net
  postgres-net:
    name: postgres-net
  postgres-private-net:
    name: postgres-private-net
  privatebin-net:
    name: privatebin-net
  speedtest-net:
    name: speedtest-net
  socket-net:
    name: socket-net
  traefik-net:
    name: traefik-net
  tripbot-net:
    name: tripbot-net
  trilium-net:
    name: trilium-net
  whoami-net:
    name: whoami-net